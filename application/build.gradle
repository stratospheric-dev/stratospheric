plugins {
  id 'org.springframework.boot' version '3.2.1'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'com.gorylenko.gradle-git-properties' version '2.4.1'
  id 'java'
}

group = 'dev.stratospheric'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
  mavenCentral()
  mavenLocal()
}

ext {
  set('selenium.version', '4.16.1')
  set('httpclient5.version', '5.3')
  set('awsSpringVersion', '3.1.0')
  set('testcontainersVersion', '1.19.3')
  set('logbackAwslogsJsonEncoderVersion', '1.1.1')
  set('errorHandlingSpringBootStarterVersion', '4.1.0')
  set('selenideVersion', '7.0.4')
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-websocket'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'io.awspring.cloud:spring-cloud-aws-starter-ses'
  implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'
  implementation 'io.awspring.cloud:spring-cloud-aws-starter-dynamodb'
  implementation 'io.micrometer:micrometer-registry-cloudwatch'
  implementation 'org.springframework.boot:spring-boot-starter-activemq'
  implementation 'org.apache.activemq:activemq-stomp'
  implementation 'org.apache.activemq:activemq-kahadb-store'
  implementation 'org.webjars:webjars-locator-core'
  implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
  implementation 'org.webjars:sockjs-client:1.5.1'
  implementation 'org.webjars:stomp-websocket:2.3.4'
  implementation 'org.webjars:bootstrap:5.3.2'
  implementation 'org.webjars:popper.js:2.11.7'
  implementation 'org.webjars:jquery:3.7.1'
  implementation 'org.webjars:font-awesome:6.5.1'
  implementation 'org.flywaydb:flyway-core'
  implementation 'software.amazon.awssdk:cognitoidentityprovider'
  implementation "de.siegmar:logback-awslogs-json-encoder:${logbackAwslogsJsonEncoderVersion}"
  implementation "io.github.wimdeblauwe:error-handling-spring-boot-starter:${errorHandlingSpringBootStarterVersion}"

  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  // Fixing Console Warning on M1 Processors
  implementation group: 'io.netty', name: 'netty-resolver-dns-native-macos', classifier: 'osx-aarch_64'

  runtimeOnly 'org.postgresql:postgresql'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.testcontainers:localstack'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'org.testcontainers:localstack'
  testImplementation "com.codeborne:selenide:${selenideVersion}"
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

dependencyManagement {
  imports {
    mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:${awsSpringVersion}"
    mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
  }
}

test {
  useJUnitPlatform()
}

bootRun {
  jvmArgs = [
    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005",
    "-Dspring.profiles.active=dev",
  ]
}

gitProperties {
}

jar {
  enabled = false
}
