plugins {
  id 'org.springframework.boot' version '3.0.1'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'java'
}

group = 'dev.stratospheric'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
  mavenCentral()
}

ext {
  set('awsSpringVersion', '3.0.0-M3')
  set('selenium.version', '4.7.2')
  set('httpclient5.version', '5.2.1')
  set('thymeleafExtrasSpringsecurity5Version', '3.1.0.RC1')
  set('springCloudStarterAwsVersion', '2.4.2')
  set('springBootStarterActivemqVersion', '2.7.5')
  set('testcontainersVersion', '1.17.6')
  set('thymeleafExtrasSpringSecurityVersion', '3.1.1.RELEASE')
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity6:${thymeleafExtrasSpringSecurityVersion}"
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-mail'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-websocket'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation "io.awspring.cloud:spring-cloud-aws-core:${awsSpringVersion}"
  implementation 'io.awspring.cloud:spring-cloud-aws-starter'
  implementation 'io.awspring.cloud:spring-cloud-aws-starter-ses'
  implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'
  implementation 'io.micrometer:micrometer-registry-cloudwatch'
  implementation 'org.springframework:spring-jms:6.0.3' // implementation 'org.springframework:spring-jms:5.3.24'
  implementation('org.apache.activemq:activemq-broker:5.17.3') { // ('org.apache.activemq:activemq-broker:5.16.5')
    exclude group: 'org.apache.geronimo.specs', module: 'geronimo-jms_1.1_spec'
    exclude group: 'org.apache.geronimo.specs', module: 'geronimo-j2ee-management_1.1_spec'
  }
  implementation 'jakarta.jms:jakarta.jms-api:3.1.0' // implementation 'jakarta.jms:jakarta.jms-api:2.0.3'
  implementation 'jakarta.management.j2ee:jakarta.management.j2ee-api:1.1.4'
  implementation 'org.webjars:webjars-locator-core'
  implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
  implementation 'org.webjars:sockjs-client:1.5.1'
  implementation 'org.webjars:stomp-websocket:2.3.4'
  implementation 'org.webjars:bootstrap:5.2.3'
  implementation 'org.webjars:popper.js:2.9.3'
  implementation 'org.webjars:jquery:3.6.3'
  implementation 'org.webjars:font-awesome:6.2.1'
  implementation 'org.flywaydb:flyway-core'
  implementation 'com.amazonaws:aws-java-sdk-cognitoidp'
  implementation 'com.amazonaws:aws-java-sdk-ses'
  implementation 'com.amazonaws:aws-java-sdk-dynamodb'
  implementation 'com.google.code.findbugs:jsr305:3.0.2'
  implementation 'de.siegmar:logback-awslogs-json-encoder:1.1.1'
  implementation 'io.github.wimdeblauwe:error-handling-spring-boot-starter:4.0.0'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  // Fixing Console Warning on M1 Processors
  implementation group: 'io.netty', name: 'netty-resolver-dns-native-macos', classifier: 'osx-aarch_64'

  runtimeOnly 'org.postgresql:postgresql'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.testcontainers:localstack'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'org.testcontainers:localstack'

  testImplementation 'com.codeborne:selenide:6.11.2'

  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

dependencyManagement {
  imports {
    mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:${awsSpringVersion}"
    mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
  }
}

test {
  useJUnitPlatform()
}

bootRun {
  jvmArgs = [
    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005",
    "-Dspring.profiles.active=dev",
  ]
}

jar {
  enabled = false
}
