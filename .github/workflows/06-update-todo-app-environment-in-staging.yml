# This workflow deploys all resources that are specific to the Todo-App, but not the app itself.
name: 06 - Update the Todo-App environment in staging

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

on:
  push:
    paths:
      - 'cdk/**/*ActiveMq*'
      - 'cdk/**/*Cognito*'
      - 'cdk/**/*Database*'
      - 'cdk/**/*Messaging*'
      - 'cdk/**/*DeploymentSequencer*'
      - 'cdk/**/*Monitoring*'
      - 'cdk/**/*DynamoDb*'
      - 'cdk/pom.xml'
      - '.github/workflows/06-update-todo-app-environment-in-staging.yml'
  workflow_dispatch:

jobs:
  deploy-instructure-stacks:
    if: github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, 'DEPLOY NOW')
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        stacks: ['messaging', 'activeMq', 'dynamo', 'database', 'cognito', 'monitoring', 'canary']
    name: Deploy the ${{ matrix.stacks }} stack
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: NPM install
        working-directory: cdk
        run: npm install

      - name: Deploy the AWS CDK stack
        working-directory: cdk
        run: npm run ${{ matrix.stacks }}:deploy -- -c canaryUserPassword=${{ secrets.CANARY_USER_PASSWORD }}

  deploy-sequencer-lambda:
    if: github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, 'DEPLOY NOW')
    runs-on: ubuntu-20.04
    name: Deploy the deployment sequencer stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: NPM install CDK dependencies
        working-directory: cdk
        run: npm install

      - name: NPM install Deployment Sequencer dependencies
        working-directory: cdk/deployment-sequencer-lambda
        run: npm install

      - name: Build Deployment Sequencer
        working-directory: cdk/deployment-sequencer-lambda
        run: npm run dist

      - name: Deploy Deployment Sequencer
        working-directory: cdk
        run: npm run deployment-sequencer:deploy -- -c githubToken=${{ secrets.GH_API_TOKEN }}
