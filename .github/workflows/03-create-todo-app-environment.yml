# This workflow deploys all resources that are specific to the Todo-App, but not the app itself.
name: 03 - Manually create the Todo-App environment

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment in which to deploy the Todo-App-specific environment resources.'
        required: true
        default: 'staging'
jobs:
  deploy-messaging-stack:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    name: Deploy the messaging stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: NPM install
        working-directory: cdk
        run: npm install

      - name: Deploy messaging stack
        working-directory: cdk
        run: npm run messaging:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-database-stack:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    name: Deploy the database stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: NPM install
        working-directory: cdk
        run: npm install

      - name: Deploy database stack
        working-directory: cdk
        run: npm run database:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-cognito-stack:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    name: Deploy the Cognito stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: NPM install
        working-directory: cdk
        run: npm install

      - name: Deploy Cognito stack
        working-directory: cdk
        run: npm run cognito:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-activemq-stack:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    name: Deploy the ActiveMq stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: NPM install
        working-directory: cdk
        run: npm install

      - name: Deploy ActiveMq stack
        working-directory: cdk
        run: npm run activeMq:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-sequencer-lambda:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    name: Deploy the Deployment Sequencer
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: NPM install CDK dependencies
        working-directory: cdk
        run: npm install

      - name: NPM install Deployment Sequencer dependencies
        working-directory: cdk/deployment-sequencer-lambda
        run: npm install

      - name: Build Deployment Sequencer
        working-directory: cdk/deployment-sequencer-lambda
        run: npm run dist

      - name: Deploy Deployment Sequencer
        working-directory: cdk
        run: npm run deployment-sequencer:deploy -- -c environmentName=${{ github.event.inputs.environmentName }} -c githubToken=${{ secrets.GH_API_TOKEN }}

  deploy-monitoring-stack:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    name: Deploy the Monitoring stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: NPM install
        working-directory: cdk
        run: npm install

      - name: Deploy Monitoring stack
        working-directory: cdk
        run: npm run monitoring:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-canary-stack:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    name: Deploy the Canary stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: NPM install
        working-directory: cdk
        run: npm install

      - name: Deploy Canary stack
        working-directory: cdk
        run: npm run canary:deploy -- -c environmentName=${{ github.event.inputs.environmentName }} -c canaryUserPassword=${{ secrets.CANARY_USER_PASSWORD }}
